<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
                    xmlns:Metro="clr-namespace:Arthas.Controls.Metro"
                    x:Class="Arthas.Themes.Metro.MetroWindow">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Arthas;component/Themes/Metro/MetroBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.15" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.05" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="backRectangle" Fill="{TemplateBinding Foreground}" Opacity="0"/>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Metro:MetroWindow}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Background" Value="#FFF3F3F3"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush}"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="TitleForeground" Value="#ffffff"/>
        <Setter Property="Icon" Value="/Arthas;component/Resources/Icon.png"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="UseLayoutRounding" Value="True"/>

        <!-- 
        
        相对的解决字体显示模糊的问题
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Auto"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        
        位置会向下偏移一像素
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        
        清晰的字体，但是不好看
        <Setter Property="FontFamily" Value="Arial,SimSun"/>
        
        -->

        <Setter Property="Shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <Shell:WindowChrome CaptionHeight="27" CornerRadius="5" GlassFrameThickness="-1" ResizeBorderThickness="5" UseAeroCaptionButtons="False" NonClientFrameEdges="None"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Metro:MetroWindow}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Enabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="disableRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disable">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="disableRectangle" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Background="#ffffff">
                            <Border BorderBrush="#000000" BorderThickness="{Binding BorderThickness,ElementName=border}" Margin="-1" Opacity="0.15"/>
                            <Grid x:Name="windowGrid" Background="{TemplateBinding BorderBrush}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="iconSize" Width="32"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="2">
                                    <ContentPresenter Content="{TemplateBinding Menu}" Margin="0,32,-120,0"/>
                                </Grid>
                                <Grid Grid.Row="1" Grid.ColumnSpan="4" Background="{TemplateBinding Background}">
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                </Grid>
                                <Grid Grid.Column="0">
                                    <Metro:MetroImage Source="{TemplateBinding Icon}"/>
                                    <Rectangle Fill="{TemplateBinding TitleForeground}" Opacity="0.15"/>
                                </Grid>
                                <Grid Grid.Column="1">
                                    <Metro:MetroTextBlock Text="{TemplateBinding Title}"  Foreground="{TemplateBinding TitleForeground}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0"/>
                                </Grid>
                                <Grid Grid.Column="3" Shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Button x:Name="minimizedButton" Foreground="{TemplateBinding TitleForeground}" HorizontalAlignment="Right" Click="Minimized" Margin="0,0,80,0" Style="{StaticResource buttonStyle}">
                                        <Button.Content>
                                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Rectangle Width="14" Height="1" Fill="{TemplateBinding TitleForeground}" Margin="0,6,0,0"/>
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                    <Button x:Name="maximizedButton" Foreground="{TemplateBinding TitleForeground}" HorizontalAlignment="Right" Click="Maximized" Margin="0,0,40,0" Style="{StaticResource buttonStyle}">
                                        <Button.Content>
                                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Rectangle Width="12" Height="12" Stroke="{TemplateBinding TitleForeground}"/>
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                    <Button x:Name="normalButton" Foreground="{TemplateBinding TitleForeground}" HorizontalAlignment="Right" Click="Normal" Margin="0,0,40,0" Style="{StaticResource buttonStyle}">
                                        <Button.Content>
                                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,2,3,0">
                                                <Rectangle Width="10" Height="10" Stroke="{TemplateBinding TitleForeground}"/>
                                                <Rectangle Width="10" Height="1" Fill="{TemplateBinding TitleForeground}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-4,-4,0" />
                                                <Rectangle Width="3" Height="1" Fill="{TemplateBinding TitleForeground}" HorizontalAlignment="Right" Margin="0,5,-3,0" VerticalAlignment="Top" />
                                                <Rectangle Width="1" Height="9" Fill="{TemplateBinding TitleForeground}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-4,0"/>
                                                <Rectangle Width="1" Height="3" Fill="{TemplateBinding TitleForeground}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-3,5,0"/>
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                    <Button x:Name="closeButton" Foreground="{TemplateBinding TitleForeground}" HorizontalAlignment="Right" Click="Close" Style="{StaticResource buttonStyle}">
                                        <Button.Content>
                                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Rectangle Width="16" Height="1.2" Fill="{TemplateBinding TitleForeground}" RenderTransformOrigin="0.5,0.5">
                                                    <Rectangle.RenderTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="45"/>
                                                        </TransformGroup>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Width="16" Height="1.2" Fill="{TemplateBinding TitleForeground}" RenderTransformOrigin="0.5,0.5">
                                                    <Rectangle.RenderTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="-45"/>
                                                        </TransformGroup>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                            </Grid>
                                        </Button.Content>
                                    </Button>
                                </Grid>
                                <Rectangle x:Name="disableRectangle" Grid.RowSpan="2" Grid.ColumnSpan="4" Fill="#FF000000" Opacity="0" IsHitTestVisible="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter Property="Visibility" TargetName="minimizedButton" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="maximizedButton" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="normalButton" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter Property="Visibility" TargetName="maximizedButton" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="normalButton" Value="Hidden"/>
                            <Setter Property="Margin" TargetName="minimizedButton" Value="0,0,40,0"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Visibility" TargetName="maximizedButton" Value="Hidden"/>
                            <Setter Property="Margin" TargetName="windowGrid" Value="8"/>
                            <Setter TargetName="windowGrid" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Shell:WindowChrome.WindowChrome).ResizeBorderThickness}" />
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="Visibility" TargetName="normalButton" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Width" TargetName="iconSize" Value="0"/>
                            <Setter Property="MinWidth" Value="120"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>